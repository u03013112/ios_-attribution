SET odps.sql.timezone=Africa/Accra;
set odps.sql.hive.compatible=true;

@dayStr := '20230901';
@days := 7;

@day := to_date(@dayStr, 'yyyyMMdd');
@dayBefore := date_sub(@day, @days);
@dayBeforeStr := to_char(@dayBefore, 'yyyyMMdd');

@skadRawData0 := SELECT
  ad_network_campaign_id as campaign_id,
  media_source as media,
  skad_conversion_value as cv,
  `timestamp` as postback_time_str
FROM
  ods_platform_appsflyer_skad_details
WHERE
  day between @dayBeforeStr and @dayStr
  AND app_id = 'id1479198816'
  AND event_name in (
    'af_skad_install',
    'af_skad_redownload'
  )
;

@skadRawData := SELECT
  campaign_id,
  media,
  cv,
  UNIX_TIMESTAMP(postback_time_str, 'yyyy-MM-dd HH:mm:ss') as postback_timestamp
FROM
  @skadRawData0
;

--修正部分超越时间限制数据的时间戳
@skad1 :=
  select
  campaign_id,
  media,
  cv,
  LEAST(
    postback_timestamp,
    UNIX_TIMESTAMP(CONCAT(@dayStr, ' 23:59:59'), 'yyyyMMdd HH:mm:ss')
  ) AS postback_timestamp
from
  @skadRawData;

@skanAddValidInstallDate :=
  SELECT
  campaign_id,
  media,
  cv,
  postback_timestamp,
  CASE
    WHEN cv < 0 THEN postback_timestamp - 72 * 3600
    WHEN cv = 0 THEN postback_timestamp - 48 * 3600
    ELSE postback_timestamp - 72 * 3600
  END AS min_valid_install_timestamp,
  postback_timestamp - 24 * 3600 AS max_valid_install_timestamp
FROM
@skad1;

-- 最小有效时间戳，比最小合法激活时间向前推8天，这是一个比较保守的估计，为了后面融合归因的时候可以扩大有效范围进行匹配，目前的算法是扩大到5天，这里富裕3天。
@minValidInstallTimestamp := select
  min(min_valid_install_timestamp) - 24 * 8 * 3600 as min_valid_install_timestamp
from
  @skanAddValidInstallDate;

-- 广告的最大有效时间戳，比最大合法激活时间向前推7天，这是一般广告的转化周期，也是一般性估计，由于广告很少更改投放国家，这个可以容忍不太准确。
@minValidInstallTimestampForAd := select
min(min_valid_install_timestamp) - 24 * (8+7) * 3600 as min_valid_install_timestamp
from
@skanAddValidInstallDate;

@maxValidInstallTimestamp := select
  max(max_valid_install_timestamp) as max_valid_install_timestamp
from
  @skanAddValidInstallDate;

@minValidInstallDayStr := select
  TO_CHAR(to_date(from_unixtime((select * from @minValidInstallTimestamp))), 'yyyyMMdd') as min_valid_install_day_str;

@minValidInstallAdDayStr := select
  TO_CHAR(to_date(from_unixtime((select * from @minValidInstallTimestampForAd))), 'yyyyMMdd') as min_valid_install_timestamp_day_str;

@maxValidInstallDayStr := select
  TO_CHAR(to_date(from_unixtime((select * from @maxValidInstallTimestamp))), 'yyyyMMdd') as max_valid_install_day_str;

@countryFromCampaignData :=
  select
  day,
  media_source,
  campaign_id,
  country_code,
  cost
from
  ods_platform_appsflyer_masters
where
  app_id = 'id1479198816'
  AND day BETWEEN (
    select * from @minValidInstallAdDayStr
  ) AND (
    select * from @maxValidInstallDayStr
  )
  AND app = '102'
  AND cost >= 1
;

@campaignTotalCost := select
  campaign_id,
  sum(cost) as cost
from @countryFromCampaignData
group by
  campaign_id
;

@campaignCountryCost := select
  campaign_id,
  country_code,
  sum(cost) as cost
from @countryFromCampaignData
group by
  campaign_id,
  country_code
;

@campaignCountryCostRatio := SELECT
t1.campaign_id,
t1.country_code,
t1.cost / t2.cost AS cost_ratio
FROM
@campaignCountryCost t1
JOIN
@campaignTotalCost t2
ON
t1.campaign_id = t2.campaign_id;

-- # 筛选掉花费占比不足3%的国家
@campaignCountryFilted :=
select
  campaign_id,
  country_code
from @campaignCountryCostRatio
where
  cost_ratio >= 0.03
;

@campaignCountry1 :=
  select
    t2.day,
    t2.media_source,
    t2.campaign_id,
    t2.country_code
  from @campaignCountryFilted t1
  left join @countryFromCampaignData t2
  on t1.campaign_id = t2.campaign_id
  and t1.country_code = t2.country_code
;
@campaignCountry2 :=
  select
    day,
    unix_timestamp(day, 'yyyyMMdd') as day_timestamp,
    media_source,
    campaign_id,
    CASE
      WHEN country_code IN ('SA', 'AE', 'KW', 'QA', 'OM', 'BH') THEN 'GCC'
      WHEN country_code = 'KR' THEN 'KR'
      WHEN country_code = 'US' THEN 'US'
      WHEN country_code = 'JP' THEN 'JP'
      ELSE 'other'
    END AS geo
  from
    @campaignCountry1
  group by
    day,
    media_source,
    campaign_id,
    geo
;

--@campaignCountry3 :=
--  select
--    day,
--    media_source,
--    campaign_id,
--    WM_CONCAT('|',geo) AS country_code_list
--  from
--    @campaignCountry2
--  group by
--    day,
--    media_source,
--    campaign_id
--  ;

@skanAddGeo0 :=
  select
    skan.campaign_id,
    skan.media,
    skan.cv,
    skan.postback_timestamp,
    skan.min_valid_install_timestamp,
    skan.max_valid_install_timestamp,
    geo.geo as geo
  from @skanAddValidInstallDate skan
  left join @campaignCountry2 geo
  on skan.campaign_id = geo.campaign_id
  and geo.day_timestamp between skan.min_valid_install_timestamp and skan.max_valid_install_timestamp
  group by
    skan.campaign_id,
    skan.media,
    skan.cv,
    skan.postback_timestamp,
    skan.min_valid_install_timestamp,
    skan.max_valid_install_timestamp,
    geo.geo
  ;

@skanAddGeo :=
  select
    campaign_id,
    media,
    cv,
    postback_timestamp,
    min_valid_install_timestamp,
    max_valid_install_timestamp,
    wm_concat('|',geo) as country_code_list
  from
  @skanAddGeo0
  group by
    campaign_id,
    media,
    cv,
    postback_timestamp,
    min_valid_install_timestamp,
    max_valid_install_timestamp
  ;

